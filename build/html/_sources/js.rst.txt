Описание модулей javascript
=================================

Базовые функции
------------------------------------------------

Базовые функции лежат в папке basic и включают в себя три файла basiclist.js, basicmodals.js и basicserver.js. В первом файле находятся функции для работы с динамическими списками, во втором--с модальными окнами, а в третьем--для взаимодействия с веб-сервером

basiclist.js
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Здесь описаны функции для заполнения динамических списков. Этот модуль будет корректироваться в зависимости от потребностей, поэтому сейчас будут описаны только те функции, оторые однозначно будут использованы в проекте.

Таблица 4.1 функции basiclist.js

+------------------------+----------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------+
|   Название функции     | Аргументы                                                                  | Описание                                                                                                                               |
+========================+============================================================================+========================================================================================================================================+
|  addOption             |  ilist, text, value, title=null , isDefaultSelected=false, isSelected=false| Добавление элемента в список                                                                                                           |
+------------------------+----------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------+
| addOptionFromObject    | ilist, obj, decoder                                                        |Добавление эдемента в спиоск из объекта obj  с использованием перекодировочного объекта decoder                                         |
+------------------------+----------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------+
|  refreshList           |   ilist                                                                    | Сброс всех элементов списка                                                                                                            |
+------------------------+----------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------+
| fillListFromServer     | ilist, optionObj, errfunc= ()=>{}, successfunc= ()=>{}                     | Заполнение списка данными сервера (из объекта optionObj). В случае ошибки выполнеятся errfunc, в случае успешного выполнения-succesfunc|
+------------------------+----------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------+
| fillListFromServerModal|  ilist, optionObj, errtext                                                 |Выполнение предыдущей функции, где в случае ошибки вызывается модальное информационное окно с текстом errtext                           |
+------------------------+----------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------+
|  setListDefaultItem    |     ilist, defText                                                         | Установление элемента по умолчанию (для пустого списка)                                                                                |
+------------------------+----------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------+
| checkList              |     ilist, defText                                                         | Проверка спсика на наличие элементов. Если список пуст вызывается setListDefaultItem                                                   |
+------------------------+----------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------+

basicmodals.js
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

В этом файле сосредоточены функции для работы с модальными окнами. Сами окна прописываются в соответствующих template (или на самой html-странице), а предложенные функции наполняют их динамическими данными. Это удобно, например, для того, чтобы стандартные окна-сообщения были инвариантны относительно всей программы.

Таблица 4.2 функции basicmodals.js

+------------------------+-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|   Название функции     | Аргументы                                                 | Описание                                                                                                                                                               |
+========================+===========================================================+========================================================================================================================================================================+
|  Modal                 | headerText, bodyText, cancelText, confirmText, confirmFunc| Заполняет модальное окно общего вида. В заголовке окна будет headerText, в теле-bodyText, на кнопках cancelText и confirmText, при потверждении выполняется confirmFunc|
+------------------------+-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| setInfoModal           |m                                                          |Заполняет информационное модальное окно(с одной кнопкой) из объекта m                                                                                                   |
+------------------------+-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| setSuccessInfoModal    | bodyText                                                  | Показывает модальное информационное окно об успешной операции с текстом bodyText                                                                                       |
+------------------------+-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| setFailureInfoModal    |bodyText                                                   |Показывает модальное информационное окно об неуспешной операции с текстом bodyText                                                                                      |
+------------------------+-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

basicserver.js
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

В этом файле описаны функции для взаимодействия с веб-сервером, т.е сохранение и загрузка данных в общем виде.

Таблица 4.3 функции basicserver.js

+-----------------------------+----------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
|   Название функции          | Аргументы                              | Описание                                                                                                                                                   |
+=============================+========================================+============================================================================================================================================================+
| getJSONFromServer           | url                                    | Получает JSON с веб-сервера по заданному адресу                                                                                                            |
+-----------------------------+----------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
|postJSON2Server              | url , f                                |Отправляет POST-запрос по заданному адресу с телом из JSON, формируемым функцией f                                                                          |
+-----------------------------+----------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
|  postJSON2ServerCallback    |   url, jsonGetter, successfunc, errfunc|Запускает postJSON2Server, но при наличие err_message в теле JSON выполняется errfunc, при отсутствии таковой--successfunc                                  |
+-----------------------------+----------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| postJSON2ServerModalCallback| url, jsonGetter, successMess, errMess  |Запускает postJSON2ServerModalCallback, где в случае успешного/неуспешного завершения показывается модальное информационное окно с текстом successMes/errMes|
+-----------------------------+----------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| defaultDataSaver            |  url, jsonGetter                       |Устанавливает стандартный вариант  postJSON2ServerModalCallback для сохранения данных                                                                       |
+-----------------------------+----------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+



Модуль построения таблиц.
------------------------------------------------

Данный модуль поволяет создавать и выводить на экран динамически сформированные таблицы. Таблицы могут содержать вычисляемые поля, результирующие строки или столбцы.

Общие положения
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Структура исходных данных. Объекты Decoder и Encoder
``````````````````````````````````````````````````````````

Источником данных для таблиц является, как правило, БД. Для того, чтобы подход к работе с данными был с одной стороны достаточно стандартизирован, а сдругой позволял работу с широким классом объектов необходимо ввести ряд допущений и ограничений. Так, требуется, чтобы из внешнего источника данные поступали в формате JSON, причем представляли собой массив определенного вида: каждый элемент этого массива будет определять строку таблицы, а данные по столбцам, при необходимости, должны быть сгруппированы в массив отдельных подобъектов. Вместе с тем, сами названия полей объекта являются произвольными, и для корректной интерпретации внешних данных нужен объект *Decoder*. Т.е. этот объект нужен для создания соответствия между объектом с данными и табличными полями. Свойства объекта Decoder, используемые в модуле:

.. _выше:

* rowData --общие параметры для строки
    * rowIndexes --индексы, определяющие строку
* columnData --общие параметры для столбцов
    * columnDataName -- название вложенного объекта, в котором сосредоточены данные
    * columnIndexes --парметры, определяющие столбец
    * columnNote --"внутреннее" название столбца
    * columnValue --значения для ячейки столбца
    * columnRefreshable -- обновляемые поля столбцов
    * columnService -- дополнительные служебные параметры
       * cellPlaceholder -- объект для значений-подсказок при пустых данных
       * cellControl -- границы допустимых значений
       * cellSTates -- значения для выпадающих списков
* treeData -- структура дерева
    * childIndex -- индекс ребенка
    * parentIndex --индекс родителя
    * calcIndex -- индекс расчета
    * sourceIndex --индекс источника

Например, для стнадартного объекта

..  code-block:: javascript
 :linenos:


    let DefaultDecoder={
      rowData:{
        rowIndexes: ["go_index"],
      },
      columnData:{
        columnDataName: "hist_values",
        columnIndexes: ["gp_index"],
        columnNote: "gp_note" ,
        columnRefreshable: ["val_value", "prev_value"],
        columnValue: "val_value",
        columnService: {
            cellPlaceholder: "prev_value",
            cellStates: "op_states",
            cellControl: "op_control"
        }
      }
    }

Это означает, что строки определяются параметром *go_index* (rowIndexes), столбцы--параметром *gp_index* (columnIndexes), а параметр *gp_note* (columnNote) определяет внутреннее имя столбцов (конечно, можно обращаться и по индексу, но гораздо удобнее с точки зрения читаемости именно по *note*). Все данные по столбцам сгруппированы в объект под названием *hist_values* (columnDataName) При обновлении данных обновляются только значения *val_value*  и *prev_value* (columnRefreshable). Значением будет являться значение *val_value* (columnValue),причем при отсутствии данных система предложит вставить предыдущее значение *prev_value* (cellPlaceHolder), в случае если значение может выбираться из списка, то допустимые значения лежат в объекте *op_states* (cellStates), а границы определяются значением *op_control* (cellControl). Например, такой JSON из БД описывается объектом *DefaultDecoder*:

.. code-block:: javascript
 :linenos:

   let iJs= [
    {
        "go_nn": 5,
        "go_index": 1112904,
        "go_fullname": "ОП Мастах",
        "hist_values": [
            {
                "gp_note": "Tv",
                "gp_index": 33,
                "op_states": null,
                "val_value": -51,
                "op_control": {
                    "max_value": null,
                    "min_value": null
                },
                "prev_value": -49
            },
            {
                "gp_note": "wind_dir",
                "gp_index": 735,
                "op_states": {
                    "0": "Штиль",
                    "1": "Северный",
                    "2": "Северо-восточный",
                    "3": "Восточный",
                    "4": "Юго-восточный",
                    "5": "Южный",
                    "6": "Юго-западный",
                    "7": "Западный",
                    "8": "Северо-западный"
                },
                "val_value": null,
                "op_control": {
                    "max_value": "1,Северный",
                    "min_value": "0,Штиль"
                },
                "prev_value": null
            }
        ]
    }]

Объект *Encoder* наоборот, служит для сохранения информации в БД. Конечно, можно пытаться отправить в БД и исходный объект (с учетом, конечно, изменений пользователя), но во-первых, он содержит много ненужных для сохранения полей , а во-вторых, механизм ассоциаций, описанный ниже нарушает структуру объекта, так как создаются перекрестные ссылки. Таким образом, удобно из объекта цеплять только необходимую информацию и сохранять ее в БД. Поля объекта *Encoder*:

* rowIndexes --параметры строк, которые нужно отправить в БД
* columnIndexes --параметры столбцов, которые нужны для сохранения в БД
* metaValues -- мета-данные (с точки зрения таблицы!), которые нужны для сохранения в БД
    * int_name --имя для БД
    * ext_name -- имя в модуле (на странице)

Например, объект

.. code-block:: javascript
 :linenos:

   let DefaultEncoder ={
    rowIndexes: ["go_index"],
    columnIndexes: ["gp_index", "val_value"],
    metaValues: [{
        int_name: "val_time",
        ext_name: "HistTime"
    }]
   }

берет из строк значения *go_index*, из столбцов --*gp_index* и *val_value*, и дополнительно ищет значение *HistTime* (которое определено ВНЕ таблицы) и сохраняет под именем *val_time*. Массив таких объектов и будет отправлен для дальнейшего сохранения в БД.

Ассоциации
`````````````````````````

Для придания таблицам интерактивности, необходимо как-то "привязать" объекты друг к  другу. Например, по заполнению ячейки менять соответствующее значение в объекте, при изменении ячейки менять результирующие значения или же менять значения в ячейках при какой-то внешней загрузке. Таким механизмом и служат ассоциации. Ассоциация представляет из себя объект, содержащий имя ассоцииорованного объекта, выполянемую функцию, а также тип ассоциации. Например, ячейка связывается с объектом через ассоциацию cell, а объекты дерева через ассоциацию parent. Таким образом, у каждого объекта-строки, объекта-столбца и объекта-таблицы есть свой набор ассоциаций, образующих свойство associateMap (для ячеек нет associatedMap, там эту роль играет функция onchange). Поэтому, чтобы при совершении каких-либо действий с объектом получить какую-то реакцию со стороны определенных зависящих объектов, достоаточно запустить функции из associateMap для определенного типа ассоциаций. В качестве примера, при изменении данных в ячейке срабатывает ассоциация cell, в результате чего меняется значение для связанного с ячейкой объекта, который в свою очередь, запускает ассоциации parent, благодаря чему считаются результирующие столбцы и строки. Более подробно этот механизм будет описан ниже.


Cоздание таблиц
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Класс TabCreator
```````````````````````````````````````````

Динамически формируемые таблицы создаются модулем посредством класса TabCreator. Для создания объекта класса необходимо задать следующие объекты:

* TableMeta -- мета-информация о таблице
    * TableName --имя таблицы
    *  свойства, соответвтующие ext_name из metaValues *Encoder-а*
    
.. _TableData:

* TableData -- JSON со структурированными данными
* Columns -- объекты для создания ячеек по стобцам
* SaveFunc --функция сохранения данных в БД
* TableStyle -- стиль таблицы (есть значение по умолчанию)
* DataCoder -- *Decoder* и *Encoder* для работы с таблицами
    * Decoder
    * Encoder
* GroupRows --функции для создания группирующих строк
    * initRow --создание группирующей строки в начале
    * contentRow--создание группирующих строк в середине
    * footRow --создание группирующих строк в конце

После инициализации объекта  для того, чтобы создать таблицу внутри фиксированного контейнера на html-странице необходимо обратиться к методу *renderTable(containername)*.

Таблица 4.4 методы TabCreator

+----------------------------+----------------+--------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|  Название метода           |  Аргументы     |  Краткое описание                                                  | Подробное описание                                                                                                                                                                                                              |
+============================+================+====================================================================+=================================================================================================================================================================================================================================+
|    createHeaderRow         |                |   Создание строки внутри заголовка                                 |                                                                                                                                                                                                                                 |
+----------------------------+----------------+--------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|   createTableHeader        |                |   Создание заголовочной части таблицы                              |                                                                                                                                                                                                                                 |
+----------------------------+----------------+--------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|   createColGroup           |                |    Создание группы столбцов                                        |                                                                                                                                                                                                                                 |
+----------------------------+----------------+--------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|   createTableBodyRows      |                |    Создание строк внутри тела таблицы                              |                                                                                                                                                                                                                                 |
+----------------------------+----------------+--------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|   createTableBody          |                |     Создание тела таблицы                                          |                                                                                                                                                                                                                                 |
+----------------------------+----------------+--------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|   createTableFooter        |                |     Создание футера таблицы                                        |                                                                                                                                                                                                                                 |
+----------------------------+----------------+--------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|   createSaveButton         |                |     Создание кнопки  для сохранения данных                         |                                                                                                                                                                                                                                 |
+----------------------------+----------------+--------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|   renderTable              |   containername|   Создание таблицы на html-странице внутри контейнера containername|                                                                                                                                                                                                                                 |
+----------------------------+----------------+--------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|   unrollTableData          |                |   Преобразование TableData в набор JSON-ов для сохранения          |                                                                                                                                                                                                                                 |
+----------------------------+----------------+--------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|   createBasicAssociationMap|                |   Создание исходной карты ассоциаций                               | Каждому внутреннему JSON ставится ассоциация parent с объектом внешнего JSON-a и функцией пересчета родительского объекта. Т.е. при изменении какого-то "внутреннего" объекта по цепочке будут пересчитываться "внешние" объекты|
|                            |                |                                                                    |                                                                                                                                                                                                                                 |
+----------------------------+----------------+--------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|   createAssociationMap     |                |   Создание  карты ассоциаций                                       | Для класса TabCreator совпадает с createBasicAssociationMap                                                                                                                                                                     |
|                            |                |                                                                    |                                                                                                                                                                                                                                 |
+----------------------------+----------------+--------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|  setColumnWidthFromArray   |       arr      |   Задает ширину стоблца по данным внешнего массива                 | Предполагается, что пропорции даны в массиве друг относительно друга. Если столбцов больше чем элементов массива, то относительная ширина незаданных колонок будет 1                                                            |
|                            |                |                                                                    |                                                                                                                                                                                                                                 |
+----------------------------+----------------+--------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|  FillByJSON                |       extObj   |  Заполняет поля TabData данными из объекта extObj                  | Если в extObj нет данных для какого либо внутреннего объекта, он не изменится. Таким образом, можно загружать (переносить) данные только по определенным объектам.                                                              |
|                            |                |                                                                    |                                                                                                                                                                                                                                 |
+----------------------------+----------------+--------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|  FillByPrevious            |                |  Заполняет значения TableData предыдущими                          |                                                                                                                                                                                                                                 |
|                            |                |                                                                    |                                                                                                                                                                                                                                 |
+----------------------------+----------------+--------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|  Refresh                   |                |  Перерасчет и обновление таблицы                                   |                                                                                                                                                                                                                                 |
|                            |                |                                                                    |                                                                                                                                                                                                                                 |
+----------------------------+----------------+--------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Подробная информация о столбцах и способах их создания будет дана в соответсвующем разделе. Группирующие строки также будут рассмотренны ниже.

Создание таблиц-деревьев. Классы TreeTableCreator/SourcedTreeTableCreator
``````````````````````````````````````````````````````````````````````````````````

Для создания таблиц, реализующих структуру дерева следует использовать этот класс, наследующий от TabCreator. Класс SourcedTreeTableCreator наследует от TreeTableCreator и нужен для создания таблиц, в котором источником какого-либо поля может быть другое поле, не связанное иерархией. Отличительные функции этих классов описаны в таблице ниже:

Таблица 4.5 методы TreeTableCreator/SourcedTreeTableCreator


+------------------------------------+-----------+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|  Название метода                   |  Аргументы|  Краткое описание                     | Подробное описание                                                                                                                                                                                                                                                                                                              |
+====================================+===========+=======================================+=================================================================================================================================================================================================================================================================================================================================+
|   create(Sourced)TreeAssociationMap|           |   Создание ассоциаций структуры дерева| Прописываются ассоциации между строками, если объект в одной является потомком объекта в другой. При этом структура дерева затрагивает только те столбцы, что несут в себе эту структуру. Например, по дереву может считаться расход, а температура по каждому объекту может быть своя, никак не связанная со структурой дерева.|
+------------------------------------+-----------+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|  createAssociationMap              |           |   Создание карты ассоциаций           | Включает в себя и стандартные ассоциации, и ассоциации дерева.                                                                                                                                                                                                                                                                  |
+------------------------------------+-----------+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|  recalcTree                        |           |  Пересчет дерева                      | Данные в дереве могут быть получены из БД в нерасчитанном состоянии                                                                                                                                                                                                                                                             |
+------------------------------------+-----------+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+


Классы для создания строк
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Основная логика в создании таблиц находится именно в объектах Columns класса TabCreator. В модуле определен базовый класс TableColumn  содержащий функцию createCell, которая и создает ячейки для всех строк определенного столбца. Конкретный вид этой функции зависит от реализации этой функции объектом-наследником

Таблица 4.6 классы для создания строк

+-------------------------------+--------------------------------+-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| Название класса               |Родительский класс              | Аргументы [1]_                    |Описание                                                                                                                        |
+===============================+================================+===================================+================================================================================================================================+
|   TableColumn                 |                                |   header, cellStyle               | Создает столбец с заголовком header и функцией createCell создание ячеек со стилем, получаемым функцией cellStyle              |
+-------------------------------+--------------------------------+-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
|   DataTableColumn             |  TableColumn                   |  header, cellStyle, sourceFunc,   | Общий класс для табличных столбцов                                                                                             |
|                               |                                |                                   | sourceFunc-- функция для нахождения объекта-источника внутри внешнего объекта;                                                 |
|                               |                                |                     .. _childFunc:|                                                                                                                                |
|                               |                                |                                   | сhildFunc --создание дочернего элемента в ячейке (например, текстового узла или поля ввода данных) со всей необходимой логикой;|
|                               |                                |  childFunc, nodataFunc, decoder   | nodataFunc -- функция создания ячейки в случае отсутствия объекта-источника;                                                   |
|                               |                                |                                   | decoder -- объект описан выше_;                                                                                                |
+-------------------------------+--------------------------------+-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
|  RowMetaTextCell              |  DataTableColumn               |header, cellStyle, sourcefield,    | Создает тектовую ячейку из поля sourcefield строки [2]_                                                                        |
|                               |                                |decoder                            |                                                                                                                                |
+-------------------------------+--------------------------------+-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| ColumnMetaTextCell            |   DataTableColumn              |header, cellStyle, sourcefield,    | Создает текствовую ячейку из поля sourcefield столбца, определенного кодом note                                                |
|                               |                                |note, decoder                      |                                                                                                                                |
+-------------------------------+--------------------------------+-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| ColumnValueTextCell           |  DataTableColumn               |header, cellStyle, sourcefield,    |  Аналогично ColumnMetaTextCell, но ячейке добавляется ассоциации с объектом, благодаря чему значение становится обновляемым    |
|                               |                                |note, decoder                      |                                                                                                                                |
+-------------------------------+--------------------------------+-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| NotedValueColumn              |  DataTableColumn               |  header, cellStyle, sourceFunc,   | Устанавливает дополнительно код столбца, что нужно для полей ввода (для их использования вычисляемыми полями )                 |
|                               |                                |  childFunc, nodataFunc, note      |                                                                                                                                |
|                               |                                |  decoder                          |                                                                                                                                |
+-------------------------------+--------------------------------+-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
|DefaultNumberInputCell         |  NotedValueColumn              |  header, note, decoder            | Создает стандартное числовое поле ввода (с плейсхолдером и контролем границ) на основе столбца с кодом note                    |
+-------------------------------+--------------------------------+-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
|NumberInputCellWithButton      |  NotedValueColumn              |header, cellStyle, note, decoder   | Аналогично создает числовое поле с кнопкой, по которой можно выставить в качстве текущего предыдущее значение                  |
+-------------------------------+--------------------------------+-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
|DefaultSelectCell              | NotedValueColumn               |  header, note, decoder            | Аналогично создает стандартное поле с возможностью выбора значения                                                             |
+-------------------------------+--------------------------------+-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| CalculatedTableCell           |  DataTableColumn               |header, cellStyle, calcFunc,       | Создает поле, вычисляемое из объекта функцией calcFunc                                                                         |
|                               |                                |decoder                            |                                                                                                                                |
+-------------------------------+--------------------------------+-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
|CalculatedCellFromColumns      |DataTableColumn                 |header, cellStyle, funcObj,        | Создает поле на основе функции f объекта funcObj, аргументами которой будут являться столбцы, найденные из объекта-источника   |
|                               |                                |                                   | funcObj-объект, состоящий из функции f и массива noteObj                                                                       |
|                               |                                |decoder                            |                                                                                                                                |
+-------------------------------+--------------------------------+-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
|CalculatedCellFromColumnsValues|                                |header, cellStyle, calcFunc,       | Создает вычисляемле поле на основании значений столбца, доступ к которым идет по их коду                                       |
|                               |                                |noteArr, decoder                   |  calcFunс-- функция для вычисления значения;                                                                                   |
|                               |                                |                                   |  noteArr-- наборо кодов столбцов, значения которых будут аргументами                                                           |
+-------------------------------+--------------------------------+-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| SumCellFromColumns            |CalculatedCellFromColumnsValues |header, cellStyle, noteArr, decoder|  Сумма нескольких столбцов                                                                                                     |
+-------------------------------+--------------------------------+-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| MinCellFromColumns            | CalculatedCellFromColumnsValues|header, cellStyle, noteArr, decoder|   Минимальное значение нескольких столбцов                                                                                     |
+-------------------------------+--------------------------------+-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
|TreeTableColumn                |TableColumn                     |header, cellStyle,sourceFunc,      |  Создает ячейку для дерева. treeFunc-- функция, определяющая место объекта в иерархии дерева.                                  |
|                               |                                | childFunc, treeFunc , decoder     |                                                                                                                                |
+-------------------------------+--------------------------------+-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------+
|NotedTreeTableColumn           | TreeTableColumn                |header, cellStyle, note, decoder   |  Создает стандартное поле ввода данных для табличных функций                                                                   |
+-------------------------------+--------------------------------+-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------+




.. [1] Если аргумент потомка эквивалентен аргументу родителя, его подробное описание опускается
.. [2] Здесь и далее понятия "строка" и "столбец" отождествленны с ассоциированными объектами, если не указано противное


Создание элементов вввода данных и ассоциаций
``````````````````````````````````````````````````````````````````````

Элементы ввода данных создаются, как правило, внутри функции childFunc потомков класса TableColumn. Для начала, внутри ячейки создается поле ввода/выбора данных через функции: 

Таблица 4.7 функции для создания полей ввода таблицы 

+--------------------------+------------------------------+------------------------------------------------------------------------------+
|   Название функции       | Аргументы                    | Описание                                                                     |
+==========================+==============================+==============================================================================+
| createDefaultBlockedInput|                              |  Заблокированное поле                                                        |
+--------------------------+------------------------------+------------------------------------------------------------------------------+
| createInputCell          | sourceObj, inputType, decoder| Стандартное поле ввода данных типа inputType с текущим значением из sourceObj|
+--------------------------+------------------------------+------------------------------------------------------------------------------+
| createSelectCell         | sourceObj, decoder           | Стнадартное поле с выбором значений на основании sourceObj                   |
+--------------------------+------------------------------+------------------------------------------------------------------------------+

После этого, ячейки (поля ввода) получают, как правило ассоциацию типа cell между ними и подобъектами объекта TableData_. Алгоритмы таковы:

* Обычные поля соответствуют подобъектам из массива columnDataName (т.е. какому то фиксированному столбцу фиксированной строки)
* Вычисляемые столбцы привязываются сразу ко всей строке
* Вычисляемые строки привязываются сразу ко всему объекту (т.е. ко всей таблице)

Таким образом, расчет вычисляемых полей выполняется по иерархии: **ячейка=>столбец=>строка**. Примеры функций-ассоциаций и вспомогательных функций-событий


Таблица 4.8 функции для работы с ассоциациями

+----------------------------------+------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
|   Название функции               | Аргументы                    | Описание                                                                                                                                     |
+==================================+==============================+==============================================================================================================================================+
| checkBorders                     |  obj, borders                | Если значение obj выходит за диапазоны borders, цвет фона obj меняется на красный                                                            |
+----------------------------------+------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| setDefaultNumberPlaceholder      | cellinput, valObj, decoder   | Ставит стандартный плейсхолдер в ячейку из предыдущего значения                                                                              |
+----------------------------------+------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| associateObj2Cell                |cellinput, obj, associateFunc | Сохраняет в associateMap объекта obj ассоциацию с объектом cellinput, функцией associateFunc и типом cell                                    |
+----------------------------------+------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| associateCell2Obj                | cellinput, obj, associateFunc| Устанавливает для cellinput событие onchange, где будет выполняться associateFunc и пересчет родителей связанного объекта                    |
+----------------------------------+------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| setObjValueFromCell              | cellinput, sourceObj, decoder| Связывает значение объекта со значением ячейки                                                                                               |
+----------------------------------+------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| setCellValueFromObj              | cellinput, sourceObj, decoder| Связывает значение ячейки со значенем объекта                                                                                                |
+----------------------------------+------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| defaultNumberEvents              | ellinput, sourceObj, decoder | Стандартный набор событий для числовых полей (по умолчанию--контроль значения)                                                               |
+----------------------------------+------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| setDefaultInputNumberCellSettings| cellinput, valObj, decoder   | Устанавливает стандартный набор ассоциаций между объектом и числовой ячейкой: перекрестные значения, проверка значения в ячейке и плейсхолдер|
+----------------------------------+------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| setDefaultSelectCellSettings     | cellinput, valObj, decoder   | Устанавливает перекрестные ссылки между полем выбора и объектом                                                                              |
+----------------------------------+------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| recalcAssociationByType          |   obj, associateType         | Выполнение у объекта ассоциаций определенного типа                                                                                           |
+----------------------------------+------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| recalcParent                     |  obj                         |Перерасчет родителей                                                                                                                          |
+----------------------------------+------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| recalc                           |  obj                         |Перерасчет ячеек                                                                                                                              |
+----------------------------------+------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| associate                        | obj                          | Запуск всех ассоциаций                                                                                                                       |
+----------------------------------+------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+


Прочие функции модуля
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Таблица 4.9 Прочие функии модуля построения таблиц 

+----------------------------------+------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
|   Название функции               | Аргументы                    | Описание                                                                                                                                     |
+==================================+==============================+==============================================================================================================================================+
| createPrevValueButton            |  cellinput, valObj, decoder  |Создание кнопки с предыдущим значением                                                                                                        |
+----------------------------------+------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| findSourceByNote                 | obj, decoder, note           | Ищет внутри массива obj элемент с кодом note                                                                                                 |
+----------------------------------+------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| part2Percents                    |partArr                       | Переводит массив из частей в проценты                                                                                                        |
+----------------------------------+------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+

Группирующие строки
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Группирующие строки задаются в объекте GroupRows объекта TabCreator. Сами функции задаются извне произвольным образом. В силу большой специфичности объекта, унификация достаточно затруднительна и потому лучшим решением будет задавать внешний массив функций, связанных со столбцами. Это нужно, так как в разных столбцах содержатся разные типы данных, и, соответственно, разная логика для группировки. Например, для  числовых значений могут выводится минимальные значения, а текстовые значение никак не должны обрабатываться и соответствующая ячейка тоже должна быть пустой. 

Таблица 4.10 Функции для создания группирующих строк

+----------------------------+-------------------------------------+-------------------------------------------------------------------------------------------------------------+
|   Название функции         | Аргументы                           | Описание                                                                                                    |
+============================+=====================================+=============================================================================================================+
| createResultRow            | rowStyle,  columnResFuncs, container|создает результирующую строку со стилем rowStyle внутри элемента container, реализующая функцию columnResFunc|
+----------------------------+-------------------------------------+-------------------------------------------------------------------------------------------------------------+
| createCalculatedRowCell    | f, note                             |Создает выисляемую ячейку на основе значений определенного столбца, вычисляемых функцией f                   |
+----------------------------+-------------------------------------+-------------------------------------------------------------------------------------------------------------+

Вот пример реализации

.. code-block:: javascript
 :linenos:

    let columnResFuncs=[()=>"Минимальные параметры",
            arr=>Math.min(...arr),
        arr=>Math.min(...arr),
        null, null ]

       .......

    iTab.GroupRows.footRow = function(tbody){
        createResultRow.call(iTab,row=>row.style="border: 2px solid orange",columnResFuncs, tbody)
    }

Здесь сначала создается массив функций, совпадающий по длине с количеством столбцов. Первый столбец результирующей строки будет содержать строчку "Минимальные параметры", а второй и третьей-- минимальные значения в соответствующих столбцах. Четвертый и пятый столбец никак посчитаны не будут (например, там результирующие значения не имеют смысла). 
 
